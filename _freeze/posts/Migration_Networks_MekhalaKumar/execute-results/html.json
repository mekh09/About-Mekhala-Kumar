{
  "hash": "d47fa28dcc6a46f3668f2cc9e2d4db4c",
  "result": {
    "markdown": "---\ntitle: \"Migration Networks\"\nauthor: \"Mekhala Kumar\"\ndescription: \"final project\"\ndate: \"05/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - Final Project\n  - Mekhala Kumar\n  - Indian Census data\n  - Internal Migration\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(igraph)\nlibrary(statnet)\nlibrary(reshape2)\nlibrary(GGally)\nlibrary(ggnetwork)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n# **Network Analysis of Internal Migration: Unravelling Work and Marriage Migration Patterns in India**\n\n# Dataset for the Project\n\nThe Indian Census collects information about demographics such as population, education levels, languages spoken and migration. It is collected once in every ten years and the latest one was collected in 2011. The data collection for the 2021 round has not been collected yet due to the Coronavirus pandemic (Bharadwaj & Batra, 2022).\n\nFor this project, the dataset utilised is the Indian Census Migration Data for the year 2011 (Table D03). I chose the dataset labelled as India which contains information on a state-wise/union-territory-wise level.\n\nIn this project, I limited my analysis to internal migration, that is, movement of people to different states/union territories within India. The Indian Census has two definitions of migrants:\n\nMigrant by birth place: This is a person whose enumeration occurs in a place that is not their birthplace (Government of India, n.d.).\n\nMigrant by place of residence: This is a person whose place of enumeration in the current Census is different from the residence they were enumerated in during the last Census (Government of India, n.d.).\n\nTable D03 uses the second definition, it also includes information about the number of years they have resided in the area and reasons why they migrated.\n\nIn the Data Science Fundamentals course (DACSS601), I studied reasons people migrated to Bangalore. For this project, I wanted to explore reasons people migrated at the country level, which can be studied through a network. I limited my analysis to two reasons: movement for work and marriage.\n\n## Note\n\nI also wanted to note that I took the proportion of migrants that moved from State 1 to State 2 for a particular reason of migration. In further detail, I calculated the proportion by dividing the number of people who moved from State 1 to State 2 for a particular reason by the total number of people who moved from State 1 to State 2. For example, if 5 million people moved from Maharashtra to Karnataka for work and the total number of people who moved was 10 million, then the proportion would be 50%. This was done to control for population bias because certain states send or receive more people simply due to them having a higher population. I noticed this when I created a network based on actual population numbers. It showed Uttar Pradesh as one of the top sending states for various reasons of migration but it was not meaningful since this is the most populated state of India.\n\n# Research Question\n\nTo study whether there are different internal migration patterns associated with movement for work and movement for marriage.\n\n# Reading in the Data\n\nThe first few rows and last few rows are unnecessary so they have been removed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india <- read_excel(\"_data/Mekhala_data/DS-0000-D03-MDDS.XLSX\",skip=5,col_names=c(\"tab_name\",\"state_code\",\"dist_code\",\"area\",\"res\",\"res_time\",\"last_res\",\"last_res_type\",\"tot_t\",\"tot_m\",\"tot_f\",\"work_t\",\"work_m\",\"work_f\",\"busi_t\",\"busi_m\",\"busi_f\",\"educ_t\",\"educ_m\",\"educ_f\",\"mar_t\",\"mar_m\",\"mar_f\",\"afterbirth_t\",\"afterbirth_m\",\"afterbirth_f\",\"withhh_t\",\"withhh_m\",\"withhh_f\",\"others_t\",\"others_m\",\"others_f\"))\ndim(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67503    32\n```\n:::\n\n```{.r .cell-code}\nhead(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name state_code dist_code area  res   res_time      last_res last_res_type\n  <chr>    <chr>      <chr>     <chr> <chr> <chr>         <chr>    <chr>        \n1 D0603    00         000       INDIA Total All duration… Total    Total        \n2 D0603    00         000       INDIA Total All duration… Last re… Total        \n3 D0603    00         000       INDIA Total All duration… Last re… Rural        \n4 D0603    00         000       INDIA Total All duration… Last re… Urban        \n5 D0603    00         000       INDIA Total All duration… Within … Total        \n6 D0603    00         000       INDIA Total All duration… Within … Rural        \n# ℹ 24 more variables: tot_t <dbl>, tot_m <dbl>, tot_f <dbl>, work_t <dbl>,\n#   work_m <dbl>, work_f <dbl>, busi_t <dbl>, busi_m <dbl>, busi_f <dbl>,\n#   educ_t <dbl>, educ_m <dbl>, educ_f <dbl>, mar_t <dbl>, mar_m <dbl>,\n#   mar_f <dbl>, afterbirth_t <dbl>, afterbirth_m <dbl>, afterbirth_f <dbl>,\n#   withhh_t <dbl>, withhh_m <dbl>, withhh_f <dbl>, others_t <dbl>,\n#   others_m <dbl>, others_f <dbl>\n```\n:::\n\n```{.r .cell-code}\ntail(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name      state_code dist_code area  res   res_time last_res last_res_type\n  <chr>         <chr>      <chr>     <chr> <chr> <chr>    <chr>    <chr>        \n1 D0603         35         000       Stat… Urban Duratio… Countri… Total        \n2 D0603         35         000       Stat… Urban Duratio… Other C… Total        \n3 D0603         35         000       Stat… Urban Duratio… Unclass… Total        \n4 <NA>          <NA>       <NA>      <NA>  <NA>  <NA>     <NA>     <NA>         \n5 Note:    1. … <NA>       <NA>      <NA>  <NA>  <NA>     <NA>     <NA>         \n6 2. The place… <NA>       <NA>      <NA>  <NA>  <NA>     <NA>     <NA>         \n# ℹ 24 more variables: tot_t <dbl>, tot_m <dbl>, tot_f <dbl>, work_t <dbl>,\n#   work_m <dbl>, work_f <dbl>, busi_t <dbl>, busi_m <dbl>, busi_f <dbl>,\n#   educ_t <dbl>, educ_m <dbl>, educ_f <dbl>, mar_t <dbl>, mar_m <dbl>,\n#   mar_f <dbl>, afterbirth_t <dbl>, afterbirth_m <dbl>, afterbirth_f <dbl>,\n#   withhh_t <dbl>, withhh_m <dbl>, withhh_f <dbl>, others_t <dbl>,\n#   others_m <dbl>, others_f <dbl>\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>%slice(1:67500)\ntail(mig_india)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  tab_name state_code dist_code area       res   res_time last_res last_res_type\n  <chr>    <chr>      <chr>     <chr>      <chr> <chr>    <chr>    <chr>        \n1 D0603    35         000       State - A… Urban Duratio… Andaman… Rural        \n2 D0603    35         000       State - A… Urban Duratio… Andaman… Urban        \n3 D0603    35         000       State - A… Urban Duratio… Last re… Total        \n4 D0603    35         000       State - A… Urban Duratio… Countri… Total        \n5 D0603    35         000       State - A… Urban Duratio… Other C… Total        \n6 D0603    35         000       State - A… Urban Duratio… Unclass… Total        \n# ℹ 24 more variables: tot_t <dbl>, tot_m <dbl>, tot_f <dbl>, work_t <dbl>,\n#   work_m <dbl>, work_f <dbl>, busi_t <dbl>, busi_m <dbl>, busi_f <dbl>,\n#   educ_t <dbl>, educ_m <dbl>, educ_f <dbl>, mar_t <dbl>, mar_m <dbl>,\n#   mar_f <dbl>, afterbirth_t <dbl>, afterbirth_m <dbl>, afterbirth_f <dbl>,\n#   withhh_t <dbl>, withhh_m <dbl>, withhh_f <dbl>, others_t <dbl>,\n#   others_m <dbl>, others_f <dbl>\n```\n:::\n:::\n\n\n# Data Cleaning\n\nMany of the columns contain aggregate values in addition to individual values. For example, it contains the number of people who migrated from each state as well the total people who migrated across all states in India. To avoid the numbers being counted twice, I removed the aggregate values. Moreover, since this is a study of internal migration, I removed observations which were about international migrants.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#area\nmig_india %>% \n  count(area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 36 × 2\n   area                                       n\n   <chr>                                  <int>\n 1 INDIA                                   1875\n 2 State - ANDAMAN & NICOBAR ISLANDS (35)  1875\n 3 State - ANDHRA PRADESH (28)             1875\n 4 State - ARUNACHAL PRADESH (12)          1875\n 5 State - ASSAM (18)                      1875\n 6 State - BIHAR (10)                      1875\n 7 State - CHANDIGARH (04)                 1875\n 8 State - CHHATTISGARH (22)               1875\n 9 State - DADRA & NAGAR HAVELI (26)       1875\n10 State - DAMAN & DIU (25)                1875\n# ℹ 26 more rows\n```\n:::\n\n```{.r .cell-code}\n#res\nmig_india %>% \n  count(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  res       n\n  <chr> <int>\n1 Rural 22500\n2 Total 22500\n3 Urban 22500\n```\n:::\n\n```{.r .cell-code}\n#res_time\nmig_india %>% \n  count(res_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  res_time                                     n\n  <chr>                                    <int>\n1 All durations of residence               13500\n2 Duration of residence 1-4 years          13500\n3 Duration of residence 10 years and above 13500\n4 Duration of residence 5-9 years          13500\n5 Duration of residence less than 1 year   13500\n```\n:::\n\n```{.r .cell-code}\n#last_Res\nmig_india %>% \n  count(last_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 45 × 2\n   last_res                           n\n   <chr>                          <int>\n 1 Andaman & Nicobar Islands       1620\n 2 Andhra Pradesh                  1620\n 3 Arunachal Pradesh               1620\n 4 Assam                           1620\n 5 Bihar                           1620\n 6 Chandigarh                      1620\n 7 Chhattisgarh                    1620\n 8 Countries in Asia beyond India   540\n 9 Dadra & Nagar Haveli            1620\n10 Daman & Diu                     1620\n# ℹ 35 more rows\n```\n:::\n\n```{.r .cell-code}\n#last_res_type\nmig_india %>% \n  count(last_res_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  last_res_type     n\n  <chr>         <int>\n1 Rural         21600\n2 Total         24300\n3 Urban         21600\n```\n:::\n:::\n\n\nSome additional aggregate values and observations not required have been removed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india<-mig_india%>%\n  filter(!str_detect(area,\"INDIA\"))%>%\n  filter(str_detect(res,\"Total\"))%>%\n  filter(str_detect(res_time,\"All durations of residence\"))%>%\n  filter(str_detect(last_res_type,\"Total\"))%>%\n  filter(!(last_res==\"Elsewhere in the district of enumeration\"|last_res==\"In other districts of the state of enumeration\"|last_res==\"Last residence outside India\"|last_res==\"Last residence within India\"|last_res==\"States in India beyond the state of enumeration\"|last_res==\"Within the state of enumeration but outside the place of enumeration\"|last_res==\"Total\"|last_res==\"Countries in Asia beyond India\"|last_res==\"Other Countries\"|last_res==\"Unclassifiable\"))\n  \n#area\nmig_india %>% \n  count(area)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 2\n   area                                       n\n   <chr>                                  <int>\n 1 State - ANDAMAN & NICOBAR ISLANDS (35)    35\n 2 State - ANDHRA PRADESH (28)               35\n 3 State - ARUNACHAL PRADESH (12)            35\n 4 State - ASSAM (18)                        35\n 5 State - BIHAR (10)                        35\n 6 State - CHANDIGARH (04)                   35\n 7 State - CHHATTISGARH (22)                 35\n 8 State - DADRA & NAGAR HAVELI (26)         35\n 9 State - DAMAN & DIU (25)                  35\n10 State - GOA (30)                          35\n# ℹ 25 more rows\n```\n:::\n\n```{.r .cell-code}\n#res\nmig_india %>% \n  count(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  res       n\n  <chr> <int>\n1 Total  1225\n```\n:::\n\n```{.r .cell-code}\n#res_time\nmig_india %>% \n  count(res_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  res_time                       n\n  <chr>                      <int>\n1 All durations of residence  1225\n```\n:::\n\n```{.r .cell-code}\n#last_Res\nmig_india %>% \n  count(last_res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 2\n   last_res                      n\n   <chr>                     <int>\n 1 Andaman & Nicobar Islands    35\n 2 Andhra Pradesh               35\n 3 Arunachal Pradesh            35\n 4 Assam                        35\n 5 Bihar                        35\n 6 Chandigarh                   35\n 7 Chhattisgarh                 35\n 8 Dadra & Nagar Haveli         35\n 9 Daman & Diu                  35\n10 Goa                          35\n# ℹ 25 more rows\n```\n:::\n\n```{.r .cell-code}\n#last_res_type\nmig_india %>% \n  count(last_res_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  last_res_type     n\n  <chr>         <int>\n1 Total          1225\n```\n:::\n:::\n\n\nThis step was done to ensure that both the from and to columns in the edgelist would have observations in the same format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_india%>%select(area)%>%distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 1\n   area                         \n   <chr>                        \n 1 State - JAMMU & KASHMIR (01) \n 2 State - HIMACHAL PRADESH (02)\n 3 State - PUNJAB (03)          \n 4 State - CHANDIGARH (04)      \n 5 State - UTTARAKHAND (05)     \n 6 State - HARYANA (06)         \n 7 State - NCT OF DELHI (07)    \n 8 State - RAJASTHAN (08)       \n 9 State - UTTAR PRADESH (09)   \n10 State - BIHAR (10)           \n# ℹ 25 more rows\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>%\n  separate(area,into=c(\"delete\",\"area\"),sep=\" - \")%>%\n  separate(area,into=c(\"area\",\"delete2\"),sep=\"\\\\(\")\nmig_india <- mig_india %>% select(-c(delete,delete2))\nmig_india%>%select(last_res)%>%distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 1\n   last_res        \n   <chr>           \n 1 Jammu & Kashmir \n 2 Himachal Pradesh\n 3 Punjab          \n 4 Chandigarh      \n 5 Uttarakhand     \n 6 Haryana         \n 7 NCT of Delhi    \n 8 Rajasthan       \n 9 Uttar Pradesh   \n10 Bihar           \n# ℹ 25 more rows\n```\n:::\n\n```{.r .cell-code}\nmig_india<-mig_india%>% mutate(last_res = toupper(last_res))\nmig_india$area <- mig_india$area %>% trimws\n```\n:::\n\n\n# Changing the data to the network object\n\nIn this network, the nodes represent the states/union territories of India. There were 28 states and 7 union territories in India in 2011 so the number of nodes will be 35. From now on, I will be referring to both the states and union territories as states. The ties denote the movement of people from one state to the other. Finally the weights are of the proportion of people moving for work or for marriage (in 2 separate networks). The data is in the form of an edgelist with the sending state, receiving state and the proportion of people moving.\n\n## Exploratory Data Analysis of Potential Weights\n\nBefore creating the networks, I checked potential weights to use for the networks. I checked for three reasons of movement: work, education and marriage. I calculated the proportions for each, in relation to the total people who moved. The density plots depict that most people move for work, followed by marriage and then education. The correlation between the proportion of migrants who moved for work and those who moved for marriage was the strongest. I decided to compare networks with weights based on these two reasons. A linear regression between the proportions for the two reasons chosen also showed that more people move for work in comparison to those who move due to marriage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_sub<-mig_india%>%\n  relocate(last_res,area,tot_t,work_t,educ_t,mar_t)\nmig_sub<-mig_sub[1:6]\n\nmig_sub<-\n  mig_sub%>%\n  mutate(work_prop = round(((work_t/tot_t)*100),2),educ_prop = round(((educ_t/tot_t)*100),2),mar_prop = round(((mar_t/tot_t)*100),2))\nsummary(mig_sub)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   last_res             area               tot_t             work_t       \n Length:1225        Length:1225        Min.   :      0   Min.   :      0  \n Class :character   Class :character   1st Qu.:    137   1st Qu.:     26  \n Mode  :character   Mode  :character   Median :   1077   Median :    222  \n                                       Mean   :  44298   Mean   :  10248  \n                                       3rd Qu.:  11813   3rd Qu.:   2643  \n                                       Max.   :2854297   Max.   :1104680  \n                                                                          \n     educ_t            mar_t          work_prop        educ_prop      \n Min.   :    0.0   Min.   :     0   Min.   :  0.00   Min.   :  0.000  \n 1st Qu.:    3.0   1st Qu.:    11   1st Qu.: 15.09   1st Qu.:  0.780  \n Median :   34.0   Median :   113   Median : 22.13   Median :  1.900  \n Mean   :  607.4   Mean   : 13792   Mean   : 25.46   Mean   :  4.443  \n 3rd Qu.:  255.0   3rd Qu.:  1731   3rd Qu.: 31.66   3rd Qu.:  4.470  \n Max.   :32240.0   Max.   :580499   Max.   :100.00   Max.   :100.000  \n                                    NA's   :52       NA's   :52       \n    mar_prop     \n Min.   :  0.00  \n 1st Qu.:  6.52  \n Median : 11.35  \n Mean   : 15.54  \n 3rd Qu.: 20.00  \n Max.   :100.00  \n NA's   :52      \n```\n:::\n\n```{.r .cell-code}\nmig_sub <- mig_sub %>% \n    mutate_at(c('work_prop','educ_prop','mar_prop'), ~replace_na(.,0))\n\n\nplot(density(mig_sub$work_prop))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(density(mig_sub$educ_prop))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(density(mig_sub$mar_prop))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncor(mig_sub$mar_prop, mig_sub$work_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.2868978\n```\n:::\n\n```{.r .cell-code}\ncor(mig_sub$educ_prop, mig_sub$work_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.07564778\n```\n:::\n\n```{.r .cell-code}\ncor(mig_sub$educ_prop, mig_sub$mar_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1854825\n```\n:::\n\n```{.r .cell-code}\nlm(mig_sub$work_prop~mig_sub$mar_prop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mig_sub$work_prop ~ mig_sub$mar_prop)\n\nCoefficients:\n     (Intercept)  mig_sub$mar_prop  \n         29.3850           -0.3361  \n```\n:::\n\n```{.r .cell-code}\nreg1<-lm(mig_sub$work_prop~mig_sub$mar_prop)\nsummary(reg1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = mig_sub$work_prop ~ mig_sub$mar_prop)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.385  -8.584  -1.435   6.655  70.615 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      29.38497    0.65622   44.78   <2e-16 ***\nmig_sub$mar_prop -0.33612    0.03209  -10.47   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.75 on 1223 degrees of freedom\nMultiple R-squared:  0.08231,\tAdjusted R-squared:  0.08156 \nF-statistic: 109.7 on 1 and 1223 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\n plot(reg1)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-6-7.png){width=672}\n:::\n:::\n\n\n## Selecting a threshold\n\nUsing the data as it currently is would make the network too dense. There is movement between almost every state and some of these movements are irrelevant because the proportion is smaller than 1%. Hence, I looked into the distributions of the proportions of people who moved for work and marriage, in order to decide a threshold.\n\n## Using work as the weight\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_network<-mig_sub%>%\n  relocate(work_prop,.before=tot_t)%>%\n  rename(from=last_res,to=area,weight=work_prop)\nmig_network<-mig_network[1:3]\n\nhist(mig_network$weight)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_network$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    0%    25%    50%    75%   100% \n  0.00  14.29  21.43  31.46 100.00 \n```\n:::\n:::\n\n\n## Using marriage as the weight\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_mar<-mig_sub%>%\n  relocate(mar_prop,.before=tot_t)%>%\n  rename(from=last_res,to=area,weight=mar_prop)\nmig_mar<-mig_mar[1:3]\n\nhist(mig_mar$weight)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nquantile(mig_mar$weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    0%    25%    50%    75%   100% \n  0.00   5.88  10.91  19.45 100.00 \n```\n:::\n:::\n\n\n## Threshold\n\nAfter observing the distribution of the proportions of the reasons along with the quantiles, I decided to keep a threshold of 20%, this would roughly cover about half of the total observations for people who moved for work and the last quantile of the people who moved due to marriage.\n\n# Creating the networks\n\n## Network based on work\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_net_threshold<- mig_network%>% \n filter(weight>=20)\ndim(mig_network)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1225    3\n```\n:::\n\n```{.r .cell-code}\ndim(mig_net_threshold)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 676   3\n```\n:::\n\n```{.r .cell-code}\nmig_work_ig<-igraph::graph_from_data_frame(mig_net_threshold,directed=TRUE)\nmig_work_stat<-network(mig_net_threshold,matrix.type=\"edgelist\")\n```\n:::\n\n\n## Network based on marriage\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmig_mar_threshold <- mig_mar%>%\n  filter(weight>=20)\ndim(mig_mar_threshold)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 294   3\n```\n:::\n\n```{.r .cell-code}\nmig_mar_ig<-igraph::graph_from_data_frame(mig_mar_threshold,directed=TRUE)\nmig_mar_stat<-network(mig_mar_threshold,matrix.type=\"edgelist\")\n```\n:::\n\n\n## Descriptives of all the networks\n\nI kept both the descriptives from statnet and igraph because in a previous challenge, I found inconsistencies in the number of edges and other details and wanted to make sure that the same issue is not occurring here.\n\n## Description for migration for work\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(mig_work_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 35 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 676 \n    missing edges= 0 \n    non-missing edges= 676 \n\n Vertex attribute names: \n    vertex.names \n\n Edge attribute names: \n    weight \n```\n:::\n\n```{.r .cell-code}\nvcount(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\necount(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 676\n```\n:::\n\n```{.r .cell-code}\nis_bipartite(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_directed(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis_weighted(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Description for migration due to marriage\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(mig_mar_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Network attributes:\n  vertices = 35 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 294 \n    missing edges= 0 \n    non-missing edges= 294 \n\n Vertex attribute names: \n    vertex.names \n\n Edge attribute names: \n    weight \n```\n:::\n\n```{.r .cell-code}\nvcount(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n\n```{.r .cell-code}\necount(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 294\n```\n:::\n\n```{.r .cell-code}\nis_bipartite(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n\n```{.r .cell-code}\nis_directed(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nis_weighted(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n## Components\n\nThere is 1 component for the migrant network pertaining to movement for work as well as for the network pertaining to movement for marriage which means that both are connected graphs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(igraph::components(mig_work_ig))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"membership\" \"csize\"      \"no\"        \n```\n:::\n\n```{.r .cell-code}\n#igraph::components(mig.ig)$membership\nigraph::components(mig_work_ig)$no \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nigraph::components(mig_work_ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(igraph::components(mig_mar_ig))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"membership\" \"csize\"      \"no\"        \n```\n:::\n\n```{.r .cell-code}\n#igraph::components(mig.ig)$membership\nigraph::components(mig_mar_ig)$no \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nigraph::components(mig_mar_ig)$csize\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 35\n```\n:::\n:::\n\n\n## Density\n\nSince a threshold was set after checking the quantiles, the density was manually created. However, these figures do show that for the same threshold, the migrant network for movement for work is more dense than the migrant network for movement for marriage. This illustrates that more people tend to move for economic opportunities in comparison to marriage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph.density(mig_work_ig,loops=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5680672\n```\n:::\n\n```{.r .cell-code}\ngraph.density(mig_mar_ig,loops=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2470588\n```\n:::\n:::\n\n\n# Plotting the networks\n\nThe plots of the networks visually demonstrate the density.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# switch to statnet object to plot\nggnet2(mig_work_stat,label=TRUE,label.size=2.5, arrow.size = 5, arrow.gap = 0.03,color = rep(\"#48bfe3\", 35))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#save a ggnet layout that you like\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# switch to statnet object to plot\nggnet2(mig_mar_stat,label=TRUE,label.size=2.5, arrow.size = 5, arrow.gap = 0.03,color = rep(\"#48bfe3\", 35))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#save a ggnet layout that you like\n```\n:::\n\n\n## Creating the dataframes to store different measures of networks\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSet <- c(\"#7400b8\",\"#8400d2\",\"#5e60ce\", \"#5390d9\",\"#689dde\", \"#48bfe3\", \"#64dfdf\", \"#72efdd\", \"#89f2e3\",\"#80ffdb\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_w<-data.frame(name = V(mig_work_ig)$name,\n    all.degree = igraph::degree(mig_work_ig, mode = 'all'), \n    out.degree = igraph::degree(mig_work_ig, mode = 'out'),\n    in.degree = igraph::degree(mig_work_ig, mode = 'in'), \n    strength_all=igraph::strength(mig_work_ig),\n    strength_in=igraph::strength(mig_work_ig,mode=\"in\"),\n    strength_out=igraph::strength(mig_work_ig,mode=\"out\"),\n    cons=igraph::constraint(mig_work_ig),\n    eigen=igraph:: evcent(mig_work_ig)$vector)\nnodes_w$transitivity <- transitivity(mig_work_ig, type = 'local')\nnodes_w$weighted.transitivity <-  transitivity(mig_work_ig, type = 'weighted')\ngtrans(mig_work_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7104843\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_w)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name             all.degree      out.degree      in.degree    \n Length:35          Min.   :19.00   Min.   : 6.00   Min.   : 4.00  \n Class :character   1st Qu.:34.00   1st Qu.:15.00   1st Qu.:14.00  \n Mode  :character   Median :38.00   Median :20.00   Median :19.00  \n                    Mean   :38.63   Mean   :19.31   Mean   :19.31  \n                    3rd Qu.:44.00   3rd Qu.:24.00   3rd Qu.:25.50  \n                    Max.   :53.00   Max.   :32.00   Max.   :32.00  \n  strength_all     strength_in      strength_out         cons       \n Min.   : 551.9   Min.   : 115.7   Min.   : 195.5   Min.   :0.1163  \n 1st Qu.:1136.4   1st Qu.: 435.0   1st Qu.: 454.6   1st Qu.:0.1232  \n Median :1295.2   Median : 556.1   Median : 594.1   Median :0.1248  \n Mean   :1338.5   Mean   : 669.2   Mean   : 669.2   Mean   :0.1270  \n 3rd Qu.:1587.9   3rd Qu.: 840.1   3rd Qu.: 838.9   3rd Qu.:0.1290  \n Max.   :2289.3   Max.   :1704.7   Max.   :1385.0   Max.   :0.1495  \n     eigen         transitivity    weighted.transitivity\n Min.   :0.2803   Min.   :0.8044   Min.   :0.6376       \n 1st Qu.:0.5246   1st Qu.:0.8312   1st Qu.:0.8294       \n Median :0.6119   Median :0.8519   Median :0.8869       \n Mean   :0.6138   Mean   :0.8546   Mean   :0.8977       \n 3rd Qu.:0.7122   3rd Qu.:0.8741   3rd Qu.:0.9883       \n Max.   :1.0000   Max.   :0.9265   Max.   :1.1905       \n```\n:::\n\n```{.r .cell-code}\nnodes_m<-data.frame(name = V(mig_mar_ig)$name,\n    all.degree = igraph::degree(mig_mar_ig, mode = 'all'), \n    out.degree = igraph::degree(mig_mar_ig, mode = 'out'),\n    in.degree = igraph::degree(mig_mar_ig, mode = 'in'), \n    strength_all=igraph::strength(mig_mar_ig),\n    strength_in=igraph::strength(mig_mar_ig,mode=\"in\"),\n    strength_out=igraph::strength(mig_mar_ig,mode=\"out\"),\n    cons=igraph::constraint(mig_mar_ig),\n    eigen=igraph:: evcent(mig_mar_ig)$vector)\n#Global\ntransitivity(mig_mar_ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5459427\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(mig_mar_ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6267173\n```\n:::\n\n```{.r .cell-code}\nnodes_m$transitivity <- transitivity(mig_mar_ig, type = 'local')\nnodes_m$weighted.transitivity <-  transitivity(mig_mar_ig, type = 'weighted')\ngtrans(mig_mar_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5551987\n```\n:::\n\n```{.r .cell-code}\nsummary(nodes_m)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name             all.degree     out.degree     in.degree   \n Length:35          Min.   : 4.0   Min.   : 2.0   Min.   : 0.0  \n Class :character   1st Qu.: 9.0   1st Qu.: 6.0   1st Qu.: 3.0  \n Mode  :character   Median :14.0   Median : 8.0   Median : 7.0  \n                    Mean   :16.8   Mean   : 8.4   Mean   : 8.4  \n                    3rd Qu.:21.0   3rd Qu.:11.0   3rd Qu.: 9.5  \n                    Max.   :36.0   Max.   :16.0   Max.   :30.0  \n  strength_all     strength_in       strength_out         cons       \n Min.   : 130.7   Min.   :   0.00   Min.   : 71.72   Min.   :0.1452  \n 1st Qu.: 323.5   1st Qu.:  98.95   1st Qu.:167.34   1st Qu.:0.1917  \n Median : 463.9   Median : 200.00   Median :247.94   Median :0.2197  \n Mean   : 584.7   Mean   : 292.35   Mean   :292.35   Mean   :0.2298  \n 3rd Qu.: 799.0   3rd Qu.: 337.69   3rd Qu.:392.85   3rd Qu.:0.2642  \n Max.   :1534.2   Max.   :1352.18   Max.   :742.49   Max.   :0.3482  \n     eigen          transitivity    weighted.transitivity\n Min.   :0.06377   Min.   :0.3862   Min.   :0.3933       \n 1st Qu.:0.18972   1st Qu.:0.5303   1st Qu.:0.5362       \n Median :0.33821   Median :0.6167   Median :0.6468       \n Mean   :0.41009   Mean   :0.6267   Mean   :0.6914       \n 3rd Qu.:0.58714   3rd Qu.:0.7022   3rd Qu.:0.7736       \n Max.   :1.00000   Max.   :0.9091   Max.   :1.3039       \n```\n:::\n:::\n\n\n# Transitivity\n\nIn the migration network weighted for movement due to work, the transitivity values for the global and average clustering coefficients are both roughly 0.85. This depicts that every state is connected to almost every other remaining state. In other words, migration occurs between almost all states. However, the proportion of migrants for each connection may not be a significant amount. This is explored by using strength as a network measure.\n\nIn the migration network weighted for movement due to marriage, the transitivity is lower, with a global clustering coefficient of roughly 0.55 and local clustering coefficient of roughly 0.63. This demonstrates that there are densely interconnected subgroups. It also shows that when it comes to migration for marriage, people are more selective.\n\nIn India, arranged marriages are common and marriages within the same caste are preferred (Sahgal et al., 2021). The caste system is a social stratification system; one is born into a fixed social group referred to as their caste (\"Systems of Social Stratification\", n.d.). While people of the same caste can reside in multiple states, perhaps the cultural differences between states result in people being more selective about marriage.\n\nMany states have their own languages, distinct food, festivals, etc. Often the language or food habits may be similar for neighbouring states. Therefore, it may be the case that the subgroups are formed based on neighbouring states since one would prefer to marry someone who is culturally similar. Whether the subgroups are based on states that share boundaries or in a particular region can be explored through clustering.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Global\ntransitivity(mig_work_ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8484054\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(mig_work_ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8546428\n```\n:::\n\n```{.r .cell-code}\nmelt(nodes_w) %>% filter(variable == 'transitivity' | variable == 'weighted.transitivity') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = 0.2) +\n  ggtitle('Transitivity Distribution, Local and Weighted for Migration due to Work')\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Global\ntransitivity(mig_mar_ig, type=\"global\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5459427\n```\n:::\n\n```{.r .cell-code}\n##Average local clustering coefficient\ntransitivity(mig_mar_ig, type=\"average\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6267173\n```\n:::\n\n```{.r .cell-code}\nmelt(nodes_m) %>% filter(variable == 'transitivity' | variable == 'weighted.transitivity') %>% \n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = 0.2) +\n  ggtitle('Transitivity Distribution, Local and Weighted for Migration due to Marriage')\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n:::\n\n\n## Degree overview\n\nThe measures of degree represent how certain states have multiple connections, however, since there are weights this might not be the most accurate depiction. This is because some states could have many ties with other states but the proportion of people who are moving could be low. Therefore, I looked into the strength measure which takes the weights into account.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_w%>%select(\"name\",\"all.degree\",\"in.degree\",\"out.degree\")%>%arrange(desc(all.degree))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name all.degree in.degree\nCHHATTISGARH                           CHHATTISGARH         53        26\nNCT OF DELHI                           NCT OF DELHI         52        32\nJHARKHAND                                 JHARKHAND         50        20\nGOA                                             GOA         50        29\nDAMAN & DIU                             DAMAN & DIU         49        32\nODISHA                                       ODISHA         48        17\nSIKKIM                                       SIKKIM         45        24\nKARNATAKA                                 KARNATAKA         45        25\nANDHRA PRADESH                       ANDHRA PRADESH         44        19\nKERALA                                       KERALA         44        13\nCHANDIGARH                               CHANDIGARH         44        28\nARUNACHAL PRADESH                 ARUNACHAL PRADESH         43        29\nTAMIL NADU                               TAMIL NADU         42        15\nMADHYA PRADESH                       MADHYA PRADESH         40        17\nUTTARAKHAND                             UTTARAKHAND         40        17\nGUJARAT                                     GUJARAT         40        23\nTRIPURA                                     TRIPURA         39        17\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI         38        31\nPUDUCHERRY                               PUDUCHERRY         38        18\nHIMACHAL PRADESH                   HIMACHAL PRADESH         37        25\nBIHAR                                         BIHAR         36         4\nMIZORAM                                     MIZORAM         36        21\nMAHARASHTRA                             MAHARASHTRA         36        26\nUTTAR PRADESH                         UTTAR PRADESH         35         7\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS         35        23\nASSAM                                         ASSAM         34        11\nNAGALAND                                   NAGALAND         34        18\nWEST BENGAL                             WEST BENGAL         33         7\nHARYANA                                     HARYANA         33        21\nLAKSHADWEEP                             LAKSHADWEEP         33        27\nPUNJAB                                       PUNJAB         30        15\nRAJASTHAN                                 RAJASTHAN         28        11\nMEGHALAYA                                 MEGHALAYA         27        12\nMANIPUR                                     MANIPUR         22         6\nJAMMU & KASHMIR                     JAMMU & KASHMIR         19        10\n                          out.degree\nCHHATTISGARH                      27\nNCT OF DELHI                      20\nJHARKHAND                         30\nGOA                               21\nDAMAN & DIU                       17\nODISHA                            31\nSIKKIM                            21\nKARNATAKA                         20\nANDHRA PRADESH                    25\nKERALA                            31\nCHANDIGARH                        16\nARUNACHAL PRADESH                 14\nTAMIL NADU                        27\nMADHYA PRADESH                    23\nUTTARAKHAND                       23\nGUJARAT                           17\nTRIPURA                           22\nDADRA & NAGAR HAVELI               7\nPUDUCHERRY                        20\nHIMACHAL PRADESH                  12\nBIHAR                             32\nMIZORAM                           15\nMAHARASHTRA                       10\nUTTAR PRADESH                     28\nANDAMAN & NICOBAR ISLANDS         12\nASSAM                             23\nNAGALAND                          16\nWEST BENGAL                       26\nHARYANA                           12\nLAKSHADWEEP                        6\nPUNJAB                            15\nRAJASTHAN                         17\nMEGHALAYA                         15\nMANIPUR                           16\nJAMMU & KASHMIR                    9\n```\n:::\n\n```{.r .cell-code}\nnodes_m%>%select(\"name\",\"all.degree\",\"in.degree\",\"out.degree\")%>%arrange(desc(all.degree))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name all.degree in.degree\nBIHAR                                         BIHAR         36        30\nASSAM                                         ASSAM         35        25\nUTTAR PRADESH                         UTTAR PRADESH         35        26\nRAJASTHAN                                 RAJASTHAN         32        20\nJHARKHAND                                 JHARKHAND         32        24\nWEST BENGAL                             WEST BENGAL         28        14\nPUNJAB                                       PUNJAB         23        10\nMADHYA PRADESH                       MADHYA PRADESH         22        11\nHARYANA                                     HARYANA         21        10\nCHHATTISGARH                           CHHATTISGARH         21         9\nMAHARASHTRA                             MAHARASHTRA         20         8\nPUDUCHERRY                               PUDUCHERRY         19         3\nTRIPURA                                     TRIPURA         19         9\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI         18         3\nODISHA                                       ODISHA         17         8\nANDHRA PRADESH                       ANDHRA PRADESH         17         5\nNCT OF DELHI                           NCT OF DELHI         16         5\nUTTARAKHAND                             UTTARAKHAND         14         7\nGUJARAT                                     GUJARAT         14         5\nSIKKIM                                       SIKKIM         14         7\nMEGHALAYA                                 MEGHALAYA         13         8\nHIMACHAL PRADESH                   HIMACHAL PRADESH         12         6\nKARNATAKA                                 KARNATAKA         12         5\nMANIPUR                                     MANIPUR         12         9\nTAMIL NADU                               TAMIL NADU         11         4\nJAMMU & KASHMIR                     JAMMU & KASHMIR          9         7\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS          9         4\nCHANDIGARH                               CHANDIGARH          8         2\nNAGALAND                                   NAGALAND          8         0\nMIZORAM                                     MIZORAM          8         2\nKERALA                                       KERALA          8         3\nGOA                                             GOA          7         1\nARUNACHAL PRADESH                 ARUNACHAL PRADESH          7         3\nDAMAN & DIU                             DAMAN & DIU          7         1\nLAKSHADWEEP                             LAKSHADWEEP          4         0\n                          out.degree\nBIHAR                              6\nASSAM                             10\nUTTAR PRADESH                      9\nRAJASTHAN                         12\nJHARKHAND                          8\nWEST BENGAL                       14\nPUNJAB                            13\nMADHYA PRADESH                    11\nHARYANA                           11\nCHHATTISGARH                      12\nMAHARASHTRA                       12\nPUDUCHERRY                        16\nTRIPURA                           10\nDADRA & NAGAR HAVELI              15\nODISHA                             9\nANDHRA PRADESH                    12\nNCT OF DELHI                      11\nUTTARAKHAND                        7\nGUJARAT                            9\nSIKKIM                             7\nMEGHALAYA                          5\nHIMACHAL PRADESH                   6\nKARNATAKA                          7\nMANIPUR                            3\nTAMIL NADU                         7\nJAMMU & KASHMIR                    2\nANDAMAN & NICOBAR ISLANDS          5\nCHANDIGARH                         6\nNAGALAND                           8\nMIZORAM                            6\nKERALA                             5\nGOA                                6\nARUNACHAL PRADESH                  4\nDAMAN & DIU                        6\nLAKSHADWEEP                        4\n```\n:::\n:::\n\n\n# Strength\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_w %>% melt %>%filter(variable=='strength_all'|variable=='strength_in'|variable=='strength_out')%>%\n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = .2, bw = 5) +\n  ggtitle('Strength Distribution')\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnodes_m %>% melt %>%filter(variable=='strength_all'|variable=='strength_in'|variable=='strength_out')%>%\n  ggplot(aes(x = value, fill = variable, color = variable)) + geom_density(alpha = .2, bw = 5) +\n  ggtitle('Strength Distribution')\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n:::\n\n\n## Strength- Out\n\nFor the migrants moving out for work, it is interesting to see that the top 3 states are neighbouring states. West Bengal, Chhattisgarh and Uttar Pradesh also share borders with the top 3 states. So there is majorly out migration from work occurring from the Eastern part and a bit of the Northern part of India . This suggests that these regions may not have as many economic opportunities or chances for growth.\n\nFor the movement due to marriage, 2 of the top 3 places (Dadra & Nagar Haveli and Puducherry) are union territories which have a smaller population in comparison to other states. Additionally, a prominent region of out migration for marriage can be observed from the North western region of India (Punjab, Rajasthan and Haryana).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout_w<-nodes_w %>% arrange(desc(strength_out))%>%slice(1:10)\nggplot(out_w, aes(fill=name,x=reorder(name,strength_out),y=strength_out))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_out,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nout_m<-nodes_m%>% arrange(desc(strength_out))%>%slice(1:10)\nggplot(out_m, aes(fill=name,x=reorder(name,strength_out),y=strength_out))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_out,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n:::\n\n\n## Strength- In\n\nFor the migrants moving to places for work, the top 3 receiving states are union territories. There is no prominent region which has in-migration, the states in the graph are from various parts of India.\n\nFor the receiving states of migrants who move for marriage, interestingly, the top 3 states are the same states that fell among the top 10 in those who moved out for work. There is also a significant overlap in the states that sent out migrants due to marriage and also receive migrants due to marriage- Assam, Rajasthan, West Bengal and Haryana. It may be the case that many people move between Haryana and Rajasthan since they are neighbouring states. Similary, since one of the neighbouring states to Assam is West Bengal, more people between the two due to marriage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nin_w<-nodes_w %>% arrange(desc(strength_in))%>%slice(1:10)\nggplot(in_w, aes(fill=name,x=reorder(name,strength_in),y=strength_in))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_in,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n```{.r .cell-code}\nin_m<-nodes_m %>% arrange(desc(strength_in))%>%slice(1:10)\nggplot(in_m, aes(fill=name,x=reorder(name,strength_in),y=strength_in))+ \n  geom_bar(stat = \"identity\")+\n  scale_fill_manual(values=Set,guide=\"none\")+\n  coord_flip()+\n  geom_text(aes(label=round(strength_in,digits=2)),position=position_stack(vjust=0.5))\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-24-2.png){width=672}\n:::\n:::\n\n\n# Eigenvector centrality, Constraint, Diameter\n\nThe following tables show the eigenvector centralities and constraints for the nodes of the 2 networks. The diameters for the two networks has also been provided.\n\nHowever, since the data did not record dynamic migration, that is the same person moving to more than one state in the time frame studied, the indirect connections between each node are not significant/ they do not represent movement. Since the measures in this section depict how nodes are connected to nodes that are central, information flow between nodes that are indirectly connected and the distance between one node to the other, they do not give interpretable information for the case of the migrant networks in this study.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_w %>% select(name,eigen)%>%arrange(desc(eigen))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name     eigen\nDAMAN & DIU                             DAMAN & DIU 1.0000000\nLAKSHADWEEP                             LAKSHADWEEP 0.8448656\nJHARKHAND                                 JHARKHAND 0.8283580\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI 0.8082074\nODISHA                                       ODISHA 0.7657562\nCHHATTISGARH                           CHHATTISGARH 0.7586060\nGOA                                             GOA 0.7465529\nARUNACHAL PRADESH                 ARUNACHAL PRADESH 0.7272429\nKERALA                                       KERALA 0.7155870\nNCT OF DELHI                           NCT OF DELHI 0.7088015\nSIKKIM                                       SIKKIM 0.7012270\nMIZORAM                                     MIZORAM 0.6656215\nTRIPURA                                     TRIPURA 0.6369395\nBIHAR                                         BIHAR 0.6259032\nKARNATAKA                                 KARNATAKA 0.6204448\nUTTARAKHAND                             UTTARAKHAND 0.6183229\nASSAM                                         ASSAM 0.6127363\nTAMIL NADU                               TAMIL NADU 0.6118898\nCHANDIGARH                               CHANDIGARH 0.6058887\nPUDUCHERRY                               PUDUCHERRY 0.5941980\nHIMACHAL PRADESH                   HIMACHAL PRADESH 0.5901149\nMADHYA PRADESH                       MADHYA PRADESH 0.5864338\nANDHRA PRADESH                       ANDHRA PRADESH 0.5736233\nWEST BENGAL                             WEST BENGAL 0.5645886\nUTTAR PRADESH                         UTTAR PRADESH 0.5415897\nGUJARAT                                     GUJARAT 0.5324478\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS 0.5166731\nMAHARASHTRA                             MAHARASHTRA 0.4919679\nNAGALAND                                   NAGALAND 0.4818445\nHARYANA                                     HARYANA 0.4627093\nPUNJAB                                       PUNJAB 0.4485455\nRAJASTHAN                                 RAJASTHAN 0.4298923\nMANIPUR                                     MANIPUR 0.4084978\nMEGHALAYA                                 MEGHALAYA 0.3754753\nJAMMU & KASHMIR                     JAMMU & KASHMIR 0.2803492\n```\n:::\n\n```{.r .cell-code}\nnodes_m %>% select(name,eigen)%>%arrange(desc(eigen))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name      eigen\nBIHAR                                         BIHAR 1.00000000\nUTTAR PRADESH                         UTTAR PRADESH 0.96855016\nJHARKHAND                                 JHARKHAND 0.87264309\nRAJASTHAN                                 RAJASTHAN 0.79904410\nWEST BENGAL                             WEST BENGAL 0.75755352\nASSAM                                         ASSAM 0.74267866\nMADHYA PRADESH                       MADHYA PRADESH 0.68642070\nODISHA                                       ODISHA 0.61783178\nCHHATTISGARH                           CHHATTISGARH 0.59601103\nHARYANA                                     HARYANA 0.57826859\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI 0.56414976\nPUNJAB                                       PUNJAB 0.49458147\nMAHARASHTRA                             MAHARASHTRA 0.43999992\nTRIPURA                                     TRIPURA 0.43199232\nPUDUCHERRY                               PUDUCHERRY 0.39803363\nGUJARAT                                     GUJARAT 0.35839908\nANDHRA PRADESH                       ANDHRA PRADESH 0.33919454\nSIKKIM                                       SIKKIM 0.33821079\nNCT OF DELHI                           NCT OF DELHI 0.33461578\nUTTARAKHAND                             UTTARAKHAND 0.33124627\nMEGHALAYA                                 MEGHALAYA 0.28907521\nMANIPUR                                     MANIPUR 0.27565849\nHIMACHAL PRADESH                   HIMACHAL PRADESH 0.24238910\nJAMMU & KASHMIR                     JAMMU & KASHMIR 0.21732747\nNAGALAND                                   NAGALAND 0.20749657\nKARNATAKA                                 KARNATAKA 0.19701447\nARUNACHAL PRADESH                 ARUNACHAL PRADESH 0.18243020\nMIZORAM                                     MIZORAM 0.17724892\nGOA                                             GOA 0.17170353\nDAMAN & DIU                             DAMAN & DIU 0.15848586\nCHANDIGARH                               CHANDIGARH 0.15413406\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS 0.15362489\nTAMIL NADU                               TAMIL NADU 0.13093098\nLAKSHADWEEP                             LAKSHADWEEP 0.08256025\nKERALA                                       KERALA 0.06376549\n```\n:::\n\n```{.r .cell-code}\nnodes_w %>% select(name,cons)%>%arrange(desc(cons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name      cons\nMANIPUR                                     MANIPUR 0.1494773\nJAMMU & KASHMIR                     JAMMU & KASHMIR 0.1450890\nMEGHALAYA                                 MEGHALAYA 0.1416492\nRAJASTHAN                                 RAJASTHAN 0.1369641\nPUDUCHERRY                               PUDUCHERRY 0.1333667\nPUNJAB                                       PUNJAB 0.1325304\nHARYANA                                     HARYANA 0.1321012\nUTTARAKHAND                             UTTARAKHAND 0.1313037\nASSAM                                         ASSAM 0.1295478\nUTTAR PRADESH                         UTTAR PRADESH 0.1284668\nGUJARAT                                     GUJARAT 0.1282502\nNAGALAND                                   NAGALAND 0.1280334\nMIZORAM                                     MIZORAM 0.1279557\nMADHYA PRADESH                       MADHYA PRADESH 0.1275386\nTAMIL NADU                               TAMIL NADU 0.1274942\nANDHRA PRADESH                       ANDHRA PRADESH 0.1265009\nCHANDIGARH                               CHANDIGARH 0.1251778\nHIMACHAL PRADESH                   HIMACHAL PRADESH 0.1248320\nTRIPURA                                     TRIPURA 0.1248301\nWEST BENGAL                             WEST BENGAL 0.1244692\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS 0.1242434\nARUNACHAL PRADESH                 ARUNACHAL PRADESH 0.1241138\nLAKSHADWEEP                             LAKSHADWEEP 0.1238052\nKERALA                                       KERALA 0.1237828\nNCT OF DELHI                           NCT OF DELHI 0.1237559\nKARNATAKA                                 KARNATAKA 0.1236612\nBIHAR                                         BIHAR 0.1228097\nSIKKIM                                       SIKKIM 0.1220418\nMAHARASHTRA                             MAHARASHTRA 0.1214947\nGOA                                             GOA 0.1209099\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI 0.1201155\nCHHATTISGARH                           CHHATTISGARH 0.1178695\nDAMAN & DIU                             DAMAN & DIU 0.1169231\nODISHA                                       ODISHA 0.1169028\nJHARKHAND                                 JHARKHAND 0.1162591\n```\n:::\n\n```{.r .cell-code}\nnodes_m %>% select(name,cons)%>%arrange(desc(cons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                               name      cons\nLAKSHADWEEP                             LAKSHADWEEP 0.3482192\nKERALA                                       KERALA 0.3305115\nDAMAN & DIU                             DAMAN & DIU 0.3063585\nHIMACHAL PRADESH                   HIMACHAL PRADESH 0.3059683\nGOA                                             GOA 0.2942055\nUTTARAKHAND                             UTTARAKHAND 0.2774808\nTAMIL NADU                               TAMIL NADU 0.2746809\nCHANDIGARH                               CHANDIGARH 0.2705776\nKARNATAKA                                 KARNATAKA 0.2662705\nARUNACHAL PRADESH                 ARUNACHAL PRADESH 0.2620318\nNAGALAND                                   NAGALAND 0.2581389\nGUJARAT                                     GUJARAT 0.2555773\nODISHA                                       ODISHA 0.2460557\nJAMMU & KASHMIR                     JAMMU & KASHMIR 0.2454465\nMEGHALAYA                                 MEGHALAYA 0.2366417\nMIZORAM                                     MIZORAM 0.2344925\nSIKKIM                                       SIKKIM 0.2272150\nCHHATTISGARH                           CHHATTISGARH 0.2196708\nMANIPUR                                     MANIPUR 0.2193605\nNCT OF DELHI                           NCT OF DELHI 0.2179952\nHARYANA                                     HARYANA 0.2131840\nMADHYA PRADESH                       MADHYA PRADESH 0.2115553\nPUNJAB                                       PUNJAB 0.2082625\nANDHRA PRADESH                       ANDHRA PRADESH 0.2077310\nMAHARASHTRA                             MAHARASHTRA 0.1969132\nANDAMAN & NICOBAR ISLANDS ANDAMAN & NICOBAR ISLANDS 0.1947735\nTRIPURA                                     TRIPURA 0.1886541\nWEST BENGAL                             WEST BENGAL 0.1827090\nRAJASTHAN                                 RAJASTHAN 0.1766241\nJHARKHAND                                 JHARKHAND 0.1749997\nUTTAR PRADESH                         UTTAR PRADESH 0.1663209\nDADRA & NAGAR HAVELI           DADRA & NAGAR HAVELI 0.1659677\nASSAM                                         ASSAM 0.1576060\nPUDUCHERRY                               PUDUCHERRY 0.1560535\nBIHAR                                         BIHAR 0.1452091\n```\n:::\n\n```{.r .cell-code}\ndiameter(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 69.65\n```\n:::\n\n```{.r .cell-code}\nfarthest_vertices(mig_work_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vertices\n+ 2/35 vertices, named, from c404f23:\n[1] MAHARASHTRA BIHAR      \n\n$distance\n[1] 69.65\n```\n:::\n\n```{.r .cell-code}\nsna::isolates(mig_work_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninteger(0)\n```\n:::\n\n```{.r .cell-code}\ndiameter(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 140.31\n```\n:::\n\n```{.r .cell-code}\nfarthest_vertices(mig_mar_ig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$vertices\n+ 2/35 vertices, named, from c40eb0b:\n[1] JAMMU & KASHMIR KARNATAKA      \n\n$distance\n[1] 140.31\n```\n:::\n\n```{.r .cell-code}\nsna::isolates(mig_mar_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninteger(0)\n```\n:::\n:::\n\n\n# Community Identification\n\nFor community identification, I decided to use the walktrap community detection and spinglass methods. Both of these algorithms support weights, however, the directions of edges are ignored.\n\n## Migration due to work\n\nThe communities identified by the 2 algorithms differ vastly for migrants who move for work. The modularity scores (3.1 e-16 and 0.006) indicate that the communities are significantly different from what would be expected in a random network.\n\n### Walktrap Community Detection\n\nSince this algorithm utilises random walks and we have established that in this network, almost every node is connected to all other nodes, this results in only one community containing all the nodes being detected.\n\n\n::: {.cell width='20' height='12'}\n\n```{.r .cell-code}\nset.seed(20)\n#Run clustering algorithm: walktrap\nworkto.wt<-walktrap.community(mig_work_ig,weights=NULL)\n#Inspect community membership\nigraph::groups(workto.wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n [1] \"UTTAR PRADESH\"             \"BIHAR\"                    \n [3] \"SIKKIM\"                    \"ARUNACHAL PRADESH\"        \n [5] \"JHARKHAND\"                 \"ODISHA\"                   \n [7] \"CHHATTISGARH\"              \"MADHYA PRADESH\"           \n [9] \"GOA\"                       \"ANDAMAN & NICOBAR ISLANDS\"\n[11] \"JAMMU & KASHMIR\"           \"UTTARAKHAND\"              \n[13] \"RAJASTHAN\"                 \"MANIPUR\"                  \n[15] \"MIZORAM\"                   \"TRIPURA\"                  \n[17] \"ASSAM\"                     \"WEST BENGAL\"              \n[19] \"GUJARAT\"                   \"DAMAN & DIU\"              \n[21] \"DADRA & NAGAR HAVELI\"      \"MAHARASHTRA\"              \n[23] \"ANDHRA PRADESH\"            \"KARNATAKA\"                \n[25] \"KERALA\"                    \"TAMIL NADU\"               \n[27] \"PUDUCHERRY\"                \"NAGALAND\"                 \n[29] \"HIMACHAL PRADESH\"          \"PUNJAB\"                   \n[31] \"HARYANA\"                   \"NCT OF DELHI\"             \n[33] \"MEGHALAYA\"                 \"LAKSHADWEEP\"              \n[35] \"CHANDIGARH\"               \n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_w$comm.wt<-workto.wt$membership\n#plot the network with community coloring\nplot(workto.wt,mig_work_ig)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#modularity\nmod_w<-modularity(workto.wt)\nmod_w\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.106238e-16\n```\n:::\n:::\n\n\n### Spinglass\n\nThis algorithm has identified 4 different clusters. Each cluster contains states from a variety of regions, illustrating that people are willing to move farther distances for employment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(20)\n#Run clustering algorithm: spinglass\nworkto.spin<-spinglass.community(mig_work_ig)\n#Inspect community membership\nigraph::groups(workto.spin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n[1] \"ANDAMAN & NICOBAR ISLANDS\" \"RAJASTHAN\"                \n[3] \"MIZORAM\"                   \"WEST BENGAL\"              \n[5] \"KARNATAKA\"                 \"PUDUCHERRY\"               \n[7] \"NCT OF DELHI\"              \"MEGHALAYA\"                \n\n$`2`\n[1] \"BIHAR\"          \"MADHYA PRADESH\" \"UTTARAKHAND\"    \"GUJARAT\"       \n[5] \"TAMIL NADU\"     \"PUNJAB\"         \"LAKSHADWEEP\"   \n\n$`3`\n [1] \"SIKKIM\"            \"ARUNACHAL PRADESH\" \"ODISHA\"           \n [4] \"GOA\"               \"MANIPUR\"           \"ASSAM\"            \n [7] \"DAMAN & DIU\"       \"MAHARASHTRA\"       \"ANDHRA PRADESH\"   \n[10] \"KERALA\"            \"NAGALAND\"          \"HARYANA\"          \n\n$`4`\n[1] \"UTTAR PRADESH\"        \"JHARKHAND\"            \"CHHATTISGARH\"        \n[4] \"JAMMU & KASHMIR\"      \"TRIPURA\"              \"DADRA & NAGAR HAVELI\"\n[7] \"HIMACHAL PRADESH\"     \"CHANDIGARH\"          \n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_w$comm.spin<-workto.spin$membership\n#plot the network with community coloring\nplot(workto.spin,mig_work_ig)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#collect modularity scores to compare\nmod_spin_w<-modularity(workto.spin)\nmod_spin_w\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.005774148\n```\n:::\n:::\n\n\n## Migration due to marriage\n\nThe communities identified by the 2 algorithms are quite similar for migrants who move for marriage. The modularity scores (0.16 and 0.09) indicate that the communities are significantly different from what would be expected in a random network.\n\nThe walktrap community detection algorithm identified 5 clusters whereas the spinglass algorithm identified 4 clusters. The clusters identified by these two algorithms mostly had states confined to a particular region of India, demonstrating that people do not move farther distances for marriage in comparison to those who moved for work.\n\nThe first cluster for both algorithms consist of states from the Southern region of India in addition to the island/union territory- Andaman and Nicobar Islands. Similarly clusters 4 in walktrap and 3 in spinglass have states from the Northern region, with the exception of Puducherry (located in the South) in the cluster identified by Spinglass.\n\nWhile there were some differences in states, clusters 3 in walktrap and 4 in spinglass represent the North-eastern region whereas clusters 2 for both the algorithms consist of states from Central/Western India.\n\n### Walktrap Community Detection\n\n\n::: {.cell width='20' height='12'}\n\n```{.r .cell-code}\nset.seed(20)\n#Run clustering algorithm: walktrap\nmarto.wt<-walktrap.community(mig_mar_ig,weights=NULL)\n#Inspect community membership\nigraph::groups(marto.wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n[1] \"ANDHRA PRADESH\"            \"KARNATAKA\"                \n[3] \"ANDAMAN & NICOBAR ISLANDS\" \"TAMIL NADU\"               \n[5] \"KERALA\"                   \n\n$`2`\n[1] \"MAHARASHTRA\"    \"GUJARAT\"        \"ODISHA\"         \"CHHATTISGARH\"  \n[5] \"MADHYA PRADESH\" \"GOA\"            \"DAMAN & DIU\"   \n\n$`3`\n [1] \"WEST BENGAL\"          \"DADRA & NAGAR HAVELI\" \"PUDUCHERRY\"          \n [4] \"TRIPURA\"              \"RAJASTHAN\"            \"ASSAM\"               \n [7] \"UTTAR PRADESH\"        \"NAGALAND\"             \"JHARKHAND\"           \n[10] \"BIHAR\"                \"SIKKIM\"               \"MIZORAM\"             \n[13] \"MANIPUR\"              \"MEGHALAYA\"           \n\n$`4`\n[1] \"HIMACHAL PRADESH\" \"PUNJAB\"           \"CHANDIGARH\"       \"NCT OF DELHI\"    \n[5] \"JAMMU & KASHMIR\"  \"UTTARAKHAND\"      \"HARYANA\"         \n\n$`5`\n[1] \"ARUNACHAL PRADESH\" \"LAKSHADWEEP\"      \n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_m$comm.wt<-marto.wt$membership\n#plot the network with community coloring\nplot(marto.wt,mig_mar_ig)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#modularity\nmod_m<-modularity(marto.wt)\nmod_m\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.16409\n```\n:::\n:::\n\n\n### Spinglass\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(20)\n#Run clustering algorithm: spinglass\nmarto.spin<-spinglass.community(mig_mar_ig)\n#Inspect community membership\nigraph::groups(marto.spin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`1`\n[1] \"ANDHRA PRADESH\"            \"KARNATAKA\"                \n[3] \"ANDAMAN & NICOBAR ISLANDS\" \"TAMIL NADU\"               \n[5] \"KERALA\"                   \n\n$`2`\n [1] \"DADRA & NAGAR HAVELI\" \"MAHARASHTRA\"          \"UTTAR PRADESH\"       \n [4] \"GUJARAT\"              \"JHARKHAND\"            \"ODISHA\"              \n [7] \"CHHATTISGARH\"         \"MADHYA PRADESH\"       \"MIZORAM\"             \n[10] \"DAMAN & DIU\"         \n\n$`3`\n[1] \"HIMACHAL PRADESH\" \"PUNJAB\"           \"CHANDIGARH\"       \"NCT OF DELHI\"    \n[5] \"PUDUCHERRY\"       \"JAMMU & KASHMIR\"  \"UTTARAKHAND\"      \"HARYANA\"         \n[9] \"RAJASTHAN\"       \n\n$`4`\n [1] \"WEST BENGAL\"       \"TRIPURA\"           \"ASSAM\"            \n [4] \"NAGALAND\"          \"BIHAR\"             \"SIKKIM\"           \n [7] \"GOA\"               \"ARUNACHAL PRADESH\" \"MANIPUR\"          \n[10] \"MEGHALAYA\"         \"LAKSHADWEEP\"      \n```\n:::\n\n```{.r .cell-code}\n#add community membership as a vertex attribute\nnodes_m$comm.spin<-marto.spin$membership\n#plot the network with community coloring\nplot(marto.spin,mig_mar_ig)\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#collect modularity scores to compare\nmod_spin_m<-modularity(marto.spin)\nmod_spin_m\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.009442108\n```\n:::\n:::\n\n\n# Network correlation\n\nI chose to use the QAP test since both my networks had the same nodes but were created with different tie content.\n\nThe plot depicts that the differences between the two networks is statistically significant. Moreover, the negative correlation further strengthens the dissimilarity between the migration network for work and migration network for marriage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngcor(mig_work_stat,mig_mar_stat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.04724667\n```\n:::\n\n```{.r .cell-code}\nqap<-qaptest(list(mig_work_stat,mig_mar_stat),gcor,g1=1,g2=2)\nqap\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nQAP Test Results\n\nEstimated p-values:\n\tp(f(perm) >= f(d)): 0.86 \n\tp(f(perm) <= f(d)): 0.157 \n```\n:::\n\n```{.r .cell-code}\nplot(qap, xlim=c(min(qap$dist)-.02, qap$testval+.02))\nabline(v=qap$testval, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Migration_Networks_MekhalaKumar_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n# Conclusion\n\nTo summarise, there is a difference observed for the patterns of movement for work and marriage. For the threshold considered in the project (at least a proportion of 20%), it is clear that more people move for work than for marriage. Moreover, people moving for work are open to move to multiple geographic regions whereas people moving for marriage mostly move within the same geographic region. The major region of out migration for work was observed to be parts of North and East India but no such major region of in migration for work was found. Finally, several of the top sending states of migrants due to marriage were simultaneously top receiving states of migrants due to marriage.\n\nIn future research, this analysis can be extended to the other reasons for migration present in the Census dataset, including but not limited to movement for education, business and within the household. Additionally, it may be interesting to observe if the patterns of movement for a particular reason has changed over years, by incorporating Census data from various time periods. It would also be helpful to study trends in Census data in the 2020-2030 decade when it is released.\n\n# References\n\n-   Bhardwaj, A., & Batra, S. (2022, July 26). *No census 2021 in 2022 either - govt 'puts exercise on hold, timeframe not yet decided'.*ThePrint.https://theprint.in/india/no-census-2021-in-2022-either-govt-puts-exercise-on-hold-timeframe-not-yet-decided/1055772/\n\n-   Government of India. (n.d.).*Drop-in-article on census - no.8 (migration).*\\\n    https://censusindia.gov.in/nada/index.php/catalog/40447\n\n-   Lumen Learning. (n.d.). *Systems of Social Stratification*. https://courses.lumenlearning.com/wm-introductiontosociology/chapter/systems-of-social-stratification/\n\n-   Office of the Registrar General India. (2021). D-03: Migrants within the State/UT by place of last residence, duration of residence and reason of migration - 2011.\\\n    \\[India\\]. https://censusindia.gov.in/census.website/data/census-tables\n\n-   Sahgal,N., Evans, J., Salazar, A.M., Starr, K.J. & Corichi, M. (2021, June 29). *4. attitudes about caste*. Pew Research Center's Religion & Public Life Project. https://www.pewresearch.org/religion/2021/06/29/attitudes-about-caste/\n",
    "supporting": [
      "Migration_Networks_MekhalaKumar_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}